substitutions:
  _CACHE: "true"
  _BUILD_CACHE_BUCKET: gs://wise-coyote-827/build-cache
  _IMAGE: gcr.io/wise-coyote-827/demo
  _RUN_IMAGE: packs/run:rc
  _BUILDER_IMAGE: packs/samples:rc
  _CREDENTIAL_HELPERS: "false"
  _USER_ID: "1000"
  _GROUP_ID: "1000"

steps:
- id: restore-m2-cache
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['-']
  entrypoint: bash
  dir: /home/pack
  args:
  - -c
  - |
    (
      mkdir -p .m2 && ${_CACHE} &&
      gsutil cp ${_BUILD_CACHE_BUCKET}/m2.tgz /tmp/m2.tgz &&
      tar xzf /tmp/m2.tgz
    ) || echo "no cache found"
  volumes: 
  - name: user.home
    path: /home/pack

- id: restore-layers-cache
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['-']
  entrypoint: bash
  dir: /
  args:
  - -c
  - |
    (
      mkdir -p /layers && ${_CACHE} &&
      gsutil cp ${_BUILD_CACHE_BUCKET}/layers.tgz /tmp/layers.tgz &&
      tar xzf /tmp/layers.tgz 
    ) || echo "no cache found"
  volumes:
  - name: layers
    path: /layers

- id: prepare
  name: alpine
  entrypoint: /bin/sh
  waitFor: ['restore-layers-cache','restore-m2-cache']
  args:
  - -c
  - |
    (
      chown -R "${_USER_ID}:${_GROUP_ID}" /builder/home &&
      chown -R "${_USER_ID}:${_GROUP_ID}" /layers &&
      chown -R "${_USER_ID}:${_GROUP_ID}" /workspace &&
      chown -R "${_USER_ID}:${_GROUP_ID}" /home/pack/.m2
    )
  volumes:
  - name: layers
    path: /layers
  - name: user.home
    path: /home/pack

- id: detect
  name: ${_BUILDER_IMAGE}
  waitFor: ['prepare']
  entrypoint: /lifecycle/detector
  args:
  - -app=/workspace
  - -group=/layers/group.toml
  - -plan=/layers/plan.toml
  volumes:
  - name: layers
    path: /layers
  - name: user.home
    path: /home/pack

- id: analyze
  name: ${_BUILDER_IMAGE}
  waitFor: ['detect']
  entrypoint: /lifecycle/analyzer
  args: 
  - -layers=/layers
  - -helpers=${_CREDENTIAL_HELPERS}
  - -group=/layers/group.toml
  - ${_IMAGE}
  volumes:
  - name: layers
    path: /layers
  - name: user.home
    path: /home/pack

- id: build
  waitFor: ["analyze"]
  name: ${_BUILDER_IMAGE}
  entrypoint: /lifecycle/builder
  args:
  - -layers=/layers
  - -app=/workspace
  - -group=/layers/group.toml
  - -plan=/layers/plan.toml
  volumes:
  - name: layers
    path: /layers
  - name: user.home
    path: /home/pack

- id: export
  waitFor: ['build']
  name: ${_BUILDER_IMAGE}
  entrypoint: /lifecycle/exporter
  args:
  - -layers=/layers
  - -helpers=${_CREDENTIAL_HELPERS}
  - -app=/workspace
  - -image=${_RUN_IMAGE}
  - -group=/layers/group.toml
  - ${_IMAGE}
  volumes:
  - name: layers
    path: /layers
  - name: user.home
    path: /home/pack

- id: update-m2-cache
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['build']
  entrypoint: bash
  dir: /home/pack
  args:
  - -c
  - |
    (
      ${_CACHE} &&
      tar czf /tmp/m2.tgz .m2 &&
      gsutil cp /tmp/m2.tgz ${_BUILD_CACHE_BUCKET}/m2.tgz
    ) || echo "unable to update cache"
  volumes:
  - name: user.home
    path: /home/pack

- id: update-layers-cache
  name: gcr.io/cloud-builders/gsutil
  waitFor: ['build']
  entrypoint: bash
  args:
  - -c
  - |
    (
      ${_CACHE} &&
      tar czf /tmp/layers.tgz /layers &&
      gsutil cp /tmp/layers.tgz ${_BUILD_CACHE_BUCKET}/layers.tgz
    ) || echo "unable to update cache"
  volumes:
  - name: layers
    path: /layers

